@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model MyMVC.Models.ViewModel.UsersModel
@{
    ViewBag.Title = "Users";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h1>Users List</h1>
<div id="userListContainer">
    <span class="alert-success">@ViewBag.Message</span>
    <table class="table table-striped table-condensed table-hover">
        <thead>
            <tr>
                <th>Account Image</th>
                <th>Login ID</th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Gender</th>
                <th>Role</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var i in Model.Users)
            {
                <tr>
                    <td>
                        @if (!string.IsNullOrEmpty(i.AccountImage))
                        {
                            <img src="@i.AccountImage" alt="Account Image" width="25" height="25"/>
                        }
                    </td>
                    <td>@Html.DisplayFor(m => i.LoginName)</td>
                    <td>@Html.DisplayFor(m => i.FirstName)</td>
                    <td>@Html.DisplayFor(m => i.LastName)</td>
                    <td>@Html.DisplayFor(m => i.Gender)</td>
                    <td>@Html.DisplayFor(m => i.RoleID)</td>
                    <td><a href="#" class="lnkEdit" data-userid="@i.UserID" data-login="@i.LoginName" data-firstname="@i.FirstName" data-lastname="@i.LastName" data-gender="@i.Gender">Edit</a></td>
                </tr>
            }
        </tbody>
    </table>
    <button id="reloadTable" class="btn btn-primary">Reload List</button>
    <div id="loadingSpinner" class="text-primary" style="
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0,0,0,0.5);
        z-index: 9999;">
        <div class="spinner-icon" style="text-align: center; margin-top:20%;">
            <div class="spinner-border text-primary"></div>
        </div>
    </div>
</div>

<!-- UPDATE MODAL -->
<div class="modal fade edit-modal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Edit User</h4>
                <button type="button" class="close close-modal" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <form>
                    <input type="hidden" id="editId"/>
                    <div class="form-group">
                        <label for="editLoginName">Login Name:</label>
                        <input type="text" class="form-control" id="editLoginName" readonly/>
                    </div>
                    <div class="form-group">
                        <label for="editFirstName">First Name:</label>
                        <input type="text" class="form-control" id="editFirstName"/>
                    </div>
                    <div class="form-group">
                        <label for="editLastName">Last Name:</label>
                        <input type="text" class="form-control" id="editLastName"/>
                    </div>
                    <div class="form-group">
                        <label for="editGender">Gender:</label>
                        <select class="form-control" id="editGender">
                            <option value="M">Male</option>
                            <option value="F">Female</option>
                            <option value="O">Other</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="editRole">Role:</label>
                        <select class="form-control" id="editRole">
                            <option value="1">Administrator</option>
                            <option value="2">Member</option>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary close-modal" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="saveChanges">Save Changes</button>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>

<script>
    document.addEventListener('DOMContentLoaded', function () {

        $(document).ready(function () {
            var editModal = $(".edit-modal");
            var editId = $("#editid");
            var editLoginName = $("#editLoginName");
            var editFirstName = $("#editFirstName");
            var editLastName = $("#editLastName");
            var editGender = $("#editGender");
            var editRole = $("#editRole");

            $("#userListContainer").on("click", ".lnkEdit", function () {
                var userId = $(this).data("userid");
                var loginName = $(this).data("login");
                var firstName = $(this).data("firstname");
                var lastName = $(this).data("lastname");
                var gender = $(this).data("gender");
                var role = $(this).data("role");

                editId.val(userId);
                editLoginName.val(loginName);
                editFirstName.val(firstName);
                editLastName.val(lastName);
                editGender.val(gender);
                editRole.val(role);

                editModal.modal("show");
            });

            $("#saveChanges").click(function () {
                var userData = {
                    LoginName: editLoginName.val(),
                    FirstName: editFirstName.val(),
                    LastName: editLastName.val(),
                    Gender: editGender.val(),
                    RoleID: editRole.val()
                };

                $.ajax({
                    type: "PUT",
                    url: "/account/update",
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(userData),
                    success: function (response) {
                        console.log("User updated successfully");
                        window.location.reload();
                    },
                    error: function (error) {
                        if (error.responseTxt == "") {
                            location.reload();
                        }
                        else {
                            console.error("Error updating user: ", error);
                            window.location.reload();
                        }
                    }
                });

                editModal.modal("hide");
            });
            $(".close-modal").click(function () {
                editModal.modal("hide");
            });
            $("#reloadTable").click(function () {
                reloadUserList();
            });

            var loadingSpinner = $("#loadingSpinner");

            $("#reloadTable").click(function () {
                showLoadingSpinner();
                reloadUserList();
            });

            function showLoadingSpinner()
            {
                loadingSpinner.show();
            }
            function hideLoadingSpinner()
            {
                loadingSpinner.hide();
            }

            function reloadUserList() {
                $.ajax({
                    type: "GET",
                    url: "/account/users",
                    success: function (data) {
                        var $response = $(data);
                        var userListHtml = $response.find("#userListContainer tbody").html();

                        $("#userListContainer tbody").html(userListHtml);
                        hideLoadingSpinnerWithDelay(500);
                    },
                    error: function (error) {
                        console.error("Error fetching user list: ", error);
                        hideLoadingSpinnerWithDelay(500);
                    }
                });
            }

            function hideLoadingSpinnerWithDelay(delayMilliseconds) {
                setTimeout(function () {
                    loadingSpinner.hide();
                }, delayMilliseconds)
            }
        });
    });
</script>